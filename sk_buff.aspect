/*
 * Copyright (c) 2014-2016 ISPRAS (http://www.ispras.ru)
 * Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * ee the License for the specific language governing permissions and
 * limitations under the License.
 */

before: file ("$this")
{
struct sk_buff;

extern struct sk_buff *ldv_net_alloc_sk_buff(unsigned int size);
extern void ldv_net_sk_buff_put(struct sk_buff *sk);
extern void ldv_copy_from_user(struct sk_buff *sk, const void *from, unsigned long n);
}

before: call(unsigned long copy_from_user(void *to, const void *from, unsigned long n))
{
	ldv_copy_from_user(to, from, n);
}

around: call(struct sk_buff *alloc_skb(unsigned int size, gfp_t priority))
{
	return ldv_net_alloc_sk_buff(size);
}

around: call(void *skb_put(struct sk_buff *skb, unsigned int len))
{
	ldv_net_sk_buff_put(skb);
}


around: call(void *skb_reserve(struct sk_buff *skb, unsigned int len))
{
}
